datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "debian-openssl-1.1.x"]
}

model User {
  id             Int         @id @default(autoincrement())
  pubkey         String      @unique
  username       String?     @unique
  proofs         Proof[] // Establishes a one-to-many relationship with the Proof model
  mintQuotes     MintQuote[]
  defaultMint    Mint        @relation(fields: [defaultMintUrl], references: [url])
  defaultMintUrl String
  allowedUnits   String[]
  receiving      Boolean     @default(false)
  createdAt      DateTime    @default(now())
  updatedAt      DateTime    @updatedAt
}

model Proof {
  id           Int        @id @default(autoincrement())
  proofId      String
  amount       Int
  secret       String
  C            String
  userId       Int // Foreign key to associate proof with a user
  user         User       @relation(fields: [userId], references: [id]) // Links back to the User model
  mintKeysetId String
  MintKeyset   MintKeyset @relation(fields: [mintKeysetId], references: [id])

  @@index([userId], name: "idx_user_id") // index to improve query performance on the userId field
}

model MintQuote {
  id      String  @id
  amount  Int
  request String
  paid    Boolean

  expiryUnix   Int
  createdAt    DateTime   @default(now())
  user         User       @relation(fields: [pubkey], references: [pubkey])
  pubkey       String
  mintKeyset   MintKeyset @relation(fields: [mintKeysetId], references: [id])
  mintKeysetId String
}

model Mint {
  url     String       @id
  keysets MintKeyset[]
  user    User[]
}

model MintKeyset {
  id        String      @id
  keys      String[]
  unit      String
  proof     Proof[]
  mintQuote MintQuote[]
  mint      Mint        @relation(fields: [mintUrl], references: [url])
  mintUrl   String
}
